package proyectoia;


import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Objects;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author carlo
 */
public class RecomendacionUsuario extends javax.swing.JFrame {

    /**
     * Creates new form RecomendacionUsuario
     */
    public String ruta;
    
    public ArrayList<Double> listaSimilitud = new ArrayList<>();
    public ArrayList<Integer> listaRecomendacion = new ArrayList<>();
    
    public ArrayList<String> lista = new ArrayList<>();
    public boolean flagRecomendar = false;
    
    
    public RecomendacionUsuario(String ruta) {
        this.ruta = ruta;
        initComponents();
    }

    private RecomendacionUsuario() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        boxDrama = new javax.swing.JCheckBox();
        boxAccion = new javax.swing.JCheckBox();
        boxComedia = new javax.swing.JCheckBox();
        txtFieldDirector = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldPais = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textFieldActor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textFieldAñoLanzamiento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnRecomendar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        boxAventura = new javax.swing.JCheckBox();
        boxFantasia = new javax.swing.JCheckBox();
        boxDocumental = new javax.swing.JCheckBox();
        boxFiccion = new javax.swing.JCheckBox();
        boxRomance = new javax.swing.JCheckBox();
        boxSuspenso = new javax.swing.JCheckBox();
        boxAnimacion = new javax.swing.JCheckBox();
        boxFamilia = new javax.swing.JCheckBox();
        boxMusical = new javax.swing.JCheckBox();
        boxMisterio = new javax.swing.JCheckBox();
        boxWestern = new javax.swing.JCheckBox();
        boxHistoria = new javax.swing.JCheckBox();
        boxDeporte = new javax.swing.JCheckBox();
        boxCrimen = new javax.swing.JCheckBox();
        boxHorror = new javax.swing.JCheckBox();
        boxGuerra = new javax.swing.JCheckBox();
        boxBiografia = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boxDrama.setText("Drama");

        boxAccion.setText("Acción");

        boxComedia.setText("Comedia");

        jLabel2.setText("Actor");

        jLabel4.setText("País");

        jLabel5.setText("Año de Lanzamiento");

        jLabel6.setText("Generos:");

        btnRecomendar.setText("Recomendar");
        btnRecomendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecomendarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList);

        jLabel7.setText("Para alimentar el motor de recomendación y que sus recomendaciones sean más acertadas, usted deberá ingresar los campos que usted quiera");

        jLabel8.setText("Si quiere ingresar más de un elemento en un campo puede hacerlo seguido de una coma");

        jLabel9.setText("Director");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Color", "Black and White" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        boxAventura.setText("Aventura");

        boxFantasia.setText("Fantasía");

        boxDocumental.setText("Documental");

        boxFiccion.setText("Ciencia Ficción");

        boxRomance.setText("Romance");

        boxSuspenso.setText("Suspenso");

        boxAnimacion.setText("Animación");

        boxFamilia.setText("Familia");

        boxMusical.setText("Musical");

        boxMisterio.setText("Misterio");

        boxWestern.setText("Western");

        boxHistoria.setText("Historia");

        boxDeporte.setText("Deporte");

        boxCrimen.setText("Crimen");

        boxHorror.setText("Horror");

        boxGuerra.setText("Guerra");

        boxBiografia.setText("Biografía");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Spanish", "Japanese", "French", "Mandarin", "Aboriginal", "English", "Hindi", "Russian", "Maya", "Telugu", "Cantonese", "Icelandic", "German", "Aramaic", "Italian", "Dutch", "Hebrew", "Chinese", "Swedish", "Korean", "Thai", "Polish", "Bosnian", "Hungarian", "Portuguese", "Norwegian", "Czech", "Kannada", "Zulu", "Danish", "Arabic", "Dzongkha", "Tamil", "Vietnamese", "Indonesian", "Urdu", "Romanian", "Slovenian", "Dari", "Persian", "None" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("Nueva Recomendación");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxDrama)
                    .addComponent(boxDocumental)
                    .addComponent(boxAccion)
                    .addComponent(boxAventura))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxSuspenso)
                    .addComponent(boxRomance)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boxFantasia)
                            .addComponent(boxFiccion))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(boxAnimacion)
                                        .addComponent(boxFamilia)
                                        .addComponent(boxMusical)
                                        .addComponent(boxMisterio)))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxWestern)
                                    .addComponent(boxHistoria)
                                    .addComponent(boxDeporte)
                                    .addComponent(boxCrimen))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxComedia)
                                    .addComponent(boxBiografia)
                                    .addComponent(boxGuerra)
                                    .addComponent(boxHorror)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btnRecomendar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFieldActor, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFieldPais, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFieldAñoLanzamiento, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
                        .addGap(102, 102, 102)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textFieldAñoLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxAccion)
                    .addComponent(boxFantasia)
                    .addComponent(boxAnimacion)
                    .addComponent(boxWestern)
                    .addComponent(boxHorror))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxFiccion)
                    .addComponent(boxAventura)
                    .addComponent(boxFamilia)
                    .addComponent(boxHistoria)
                    .addComponent(boxGuerra))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxDocumental)
                    .addComponent(boxSuspenso)
                    .addComponent(boxMusical)
                    .addComponent(boxDeporte)
                    .addComponent(boxBiografia))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxRomance)
                    .addComponent(boxDrama)
                    .addComponent(boxMisterio)
                    .addComponent(boxCrimen)
                    .addComponent(boxComedia))
                .addGap(27, 27, 27)
                .addComponent(btnRecomendar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecomendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecomendarActionPerformed
        // TODO add your handling code here:
        if (flagRecomendar) {
            JOptionPane.showMessageDialog( null, "Para realizar una nueva recomendación ingrese la opción 'Nueva Recomendación'", "ADVERTENCIA",JOptionPane.INFORMATION_MESSAGE);
        } else {
        flagRecomendar = true;
        
        String director = txtFieldDirector.getText();
        String actor = textFieldActor.getText();
        String genero = "";
        String pais = textFieldPais.getText();
        String año = textFieldAñoLanzamiento.getText();
        //String idioma = textFieldIdioma.getText();
        String color = "";
        String idioma = "";
        /*
        Integer año = 0;
        if (!añoString.isEmpty()) {
             año = Integer.parseInt(textFieldAñoLanzamiento.getText());
        }
        */
        
        color = jComboBox1.getSelectedItem().toString();
        idioma = jComboBox2.getSelectedItem().toString();
        
        if (boxAccion.isSelected()) {
            genero = "Action";
        }
        if (boxAventura.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Adventure";
            } else {
                genero = "Adventure";
            }   
        }
        if (boxDocumental.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Documentary";
            } else {
                genero = "Documentary";
            }   
        }
        if (boxDrama.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Drama";
            } else {
                genero = "Drama";
            }   
        }
        if (boxFantasia.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Fantasy";
            } else {
                genero = "Fantasy";
            }   
        }
        if (boxFiccion.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Sci-Fi";
            } else {
                genero = "Sci-Fi";
            }   
        }
        if (boxSuspenso.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Thriller";
            } else {
                genero = "Thriller";
            }   
        }
        if (boxRomance.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Romance";
            } else {
                genero = "Romance";
            }   
        }
        if (boxAnimacion.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Animation";
            } else {
                genero = "Animation";
            }   
        }
        if (boxFamilia.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Family";
            } else {
                genero = "Family";
            }   
        }
        if (boxMusical.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Musical";
            } else {
                genero = "Musical";
            }   
        }
        if (boxMisterio.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Mystery";
            } else {
                genero = "Mystery";
            }   
        }
        if (boxWestern.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Western";
            } else {
                genero = "Western";
            }   
        }
        if (boxHistoria.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",History";
            } else {
                genero = "History";
            }   
        }
        if (boxDeporte.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Sport";
            } else {
                genero = "Sport";
            }   
        }
        if (boxCrimen.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Crime";
            } else {
                genero = "Crime";
            }   
        }
        if (boxHorror.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Horror";
            } else {
                genero = "Horror";
            }   
        }
        if (boxGuerra.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",War";
            } else {
                genero = "War";
            }   
        }
        if (boxBiografia.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Biography";
            } else {
                genero = "Biography";
            }   
        }
        if (boxComedia.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Comedy";
            } else {
                genero = "Comedy";
            }   
        }
        
        DataSetMovies data = new DataSetMovies();
        data.LeerArchivo(ruta);
   
        Similitud(data.director_name,data.actor_1_name,data.genres_by_movie,data.country,data.title_year,data.color,data.language,director,actor,genero,pais,año,idioma,color);
        
        int size;
        if (listaRecomendacion.size()>=10) {
            size = 10;
        } else {
            size = listaRecomendacion.size();
        }
        ArrayList<Integer>listaRandom = new ArrayList<>();
        
        for (int i = 0; i < size; i++) {
        Random rand = new Random();
        while(true) 
        {
        int randomElement = listaRecomendacion.get(rand.nextInt(listaRecomendacion.size()));
        if(!listaRandom.contains(randomElement))
        {
        listaRandom.add(randomElement);
        break;
        }
        }
        }
        DefaultListModel model = new DefaultListModel<>();
        for(Integer random : listaRandom) {
            String add = data.movie_title.get(random);
            model.addElement(add);
        }
        jList.setModel(model);
        
            if (!director.isEmpty()) {
                lista.add("(DIRECTOR) "+director);
            }
            if (!actor.isEmpty()) {
                lista.add("(ACTOR) "+actor);
            }
            if (!genero.isEmpty()) {
                lista.add("(GENERO) "+genero);
            }
            if (!pais.isEmpty()) {
                lista.add("(PAIS) "+pais);
            }
            if (!año.isEmpty()) {
                lista.add("(AÑO) "+año);
            }
            if (!color.isEmpty()) {
                lista.add("(COLOR) "+color);
            }
            if (!idioma.isEmpty()) {
                lista.add("(IDIOMA) "+idioma);
            }
            try {
                CrearArchivo(lista);
            } catch (IOException ex) {
                Logger.getLogger(RecomendacionUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }
    }//GEN-LAST:event_btnRecomendarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         JFrame menu = new JFrame();
            menu.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void CrearArchivo (ArrayList<String> lista) throws IOException {
 
        String ruta = "src/ProyectoIA/Datos.txt";
        File file = new File(ruta);
        String rutaCompleta = file.getAbsolutePath();

        File archivo = new File(rutaCompleta);
        BufferedWriter bw;
        
            bw = new BufferedWriter(new FileWriter(archivo));
            for (int i = 0; i < lista.size(); i++) {
              bw.write(lista.get(i)+"\n");  
            }
        
        bw.close();
    }
    
    public static double Round(double valor, int numeroDecimales) {
        double parteEntera, resultado;
        resultado = valor;
        parteEntera = Math.floor(resultado);
        resultado=(resultado-parteEntera)*Math.pow(10, numeroDecimales);
        resultado=Math.round(resultado);
        resultado=(resultado/Math.pow(10, numeroDecimales))+parteEntera;
        return resultado;
    }
    
    public void Similitud (ArrayList<String> ListaDirector, ArrayList<String> ListaActor, ArrayList<ArrayList<String>>ListaGenero, ArrayList<String> ListaPais, ArrayList<Integer> ListaAño, 
            ArrayList<String> ListaColor, ArrayList<String> ListaIdioma,String Director, String Actor, String Genero, String Pais, String Año, String Idioma, String Color) {
        
        DataSetMovies data = new DataSetMovies();
        data.LeerArchivo(ruta);
        
        double pesoDirector = 0.25;
        double pesoActor = 0.10;
        double pesoGenero = 0.35;
        double pesoPais = 0.10;
        double pesoAñoLanzamiento = 0.15;
        double pesoIdioma = 0.05;
        double pesoColor;
         
        String[] generosUsuario = Genero.split(",");
        String[] directorUsuario = Director.split(",");
        String[] actorUsuario = Actor.split(",");
        String[] paisUsuario = Pais.split(",");
        String[] añoUsuario = Año.split(",");
        
       
        for (int i = 0; i < ListaDirector.size(); i++) {
            double similitud = 0.0;
            
            if (Director.isEmpty()&&Actor.isEmpty()&&Genero.isEmpty()&&Pais.isEmpty()&&Año.isEmpty()&&Idioma.isEmpty()) {
                if (Color.equals("Color")) {
                    if (ListaColor.get(i).equals(Color)) {
                        pesoColor = 0.0;
                        similitud = similitud + pesoColor;
                    }
            }
            }
            
            if (Color.equals("Black and White")) {
                if (ListaColor.get(i).equals(Color)) {
                    pesoColor = 1;
                    similitud = similitud + pesoColor;
                }
            }
            
            if (ListaIdioma.get(i).equals(Idioma)) {
                similitud = similitud + pesoIdioma;
            }
            
            
            for (String director : directorUsuario){
            if(ListaDirector.get(i).toUpperCase().equals(director)){
                similitud = similitud + pesoDirector;
            }
            }
            
            /*
            for (String idioma : idiomaUsuario){
            if(ListaDirector.get(i).toUpperCase().equals(idioma)){
                similitud = similitud + pesoIdioma;
            }
            }
            */
            
            for (String año : añoUsuario){
                if (año.equals("")) {
                    año="0";
                }
            if(ListaAño.get(i) == Integer.parseInt(año)){
                similitud = similitud + pesoAñoLanzamiento;
            }
            }
            
            for (String actor : actorUsuario){
            if(ListaActor.get(i).toUpperCase().equals(actor)){
                similitud = similitud + pesoActor;
            }
            else if(data.actor_2_name.get(i).toUpperCase().equals(actor)){
                similitud = similitud + pesoActor;
            }
            else if(data.actor_3_name.get(i).toUpperCase().equals(actor)){
                similitud = similitud + pesoActor;
            }
            }
            
            for (String pais : paisUsuario){
            if(ListaPais.get(i).toUpperCase().equals(pais)){
                similitud = similitud + pesoPais;
            }
            }
             
            ArrayList<String> generosMovie = new ArrayList<>();
            generosMovie = ListaGenero.get(i);
            for (String genero : generosUsuario){
            if(generosMovie.contains(genero)){
                similitud = similitud + pesoGenero;
            }
            }

            similitud = Round(similitud,4);
            listaSimilitud.add(similitud);

        }
        GetListaRecomendacion();
    }
    
    public void GetListaRecomendacion() {
        
        double rango1=0.0;
        double rango2=0.0;
        rango1 = getMax(listaSimilitud,1);
        rango2 = getMax(listaSimilitud,2);
        
        int contador = 2;
        if (rango2 == rango1) {
            while (true) {
            rango2 = getMax(listaSimilitud,contador);
                if (rango2 != rango1) {
                    break;
                } 
                contador++;
            }
        }
        contador = 0;
        for(double n: listaSimilitud)
        {
            if(Objects.equals(n, rango1)|| Objects.equals(n, rango2))                
            {
                listaRecomendacion.add(contador);                        
            }
            contador++;
        }
    }
    
    ///////////////////EN ESPERA//////////////////////////
    public Double getProbabilidad () {
        return null;
    }
            
    public Double getMax (ArrayList lista, int n){
        ArrayList<Double> sortedlist = new ArrayList<>(lista); 
        Collections.sort(sortedlist); 
        return sortedlist.get(sortedlist.size()-n);
   }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecomendacionUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxAccion;
    private javax.swing.JCheckBox boxAnimacion;
    private javax.swing.JCheckBox boxAventura;
    private javax.swing.JCheckBox boxBiografia;
    private javax.swing.JCheckBox boxComedia;
    private javax.swing.JCheckBox boxCrimen;
    private javax.swing.JCheckBox boxDeporte;
    private javax.swing.JCheckBox boxDocumental;
    private javax.swing.JCheckBox boxDrama;
    private javax.swing.JCheckBox boxFamilia;
    private javax.swing.JCheckBox boxFantasia;
    private javax.swing.JCheckBox boxFiccion;
    private javax.swing.JCheckBox boxGuerra;
    private javax.swing.JCheckBox boxHistoria;
    private javax.swing.JCheckBox boxHorror;
    private javax.swing.JCheckBox boxMisterio;
    private javax.swing.JCheckBox boxMusical;
    private javax.swing.JCheckBox boxRomance;
    private javax.swing.JCheckBox boxSuspenso;
    private javax.swing.JCheckBox boxWestern;
    private javax.swing.JButton btnRecomendar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textFieldActor;
    private javax.swing.JTextField textFieldAñoLanzamiento;
    private javax.swing.JTextField textFieldPais;
    private javax.swing.JTextField txtFieldDirector;
    // End of variables declaration//GEN-END:variables
}
