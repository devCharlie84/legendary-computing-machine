package proyectoia;


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author carlo
 */
public class RecomendacionUsuario extends javax.swing.JFrame {

    /**
     * Creates new form RecomendacionUsuario
     */
    public String ruta;
    public ArrayList<Double> listaSimilitud = new ArrayList<>();
    
    public ArrayList<Integer> recomendacion = new ArrayList<>();
    
    public RecomendacionUsuario(String ruta) {
        this.ruta = ruta;
        initComponents();
    }

    private RecomendacionUsuario() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        boxDrama = new javax.swing.JCheckBox();
        boxAccion = new javax.swing.JCheckBox();
        boxComedia = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtFieldDirector = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldPais = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textFieldActor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textFieldAñoLanzamiento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnRecomendar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boxDrama.setText("Drama");

        boxAccion.setText("Acción");

        boxComedia.setText("Comedia");

        jLabel1.setText("Director");

        jLabel2.setText("Actor Principal");

        jLabel4.setText("País");

        jLabel5.setText("Año de Lanzamiento");

        jLabel6.setText("Generos:");

        btnRecomendar.setText("Recomendar");
        btnRecomendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecomendarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(90, 90, 90)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(textFieldAñoLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel6)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(98, 98, 98)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4))
                            .addGap(33, 33, 33)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFieldDirector)
                                .addComponent(textFieldActor)
                                .addComponent(textFieldPais)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(166, 166, 166)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(boxAccion)
                                .addComponent(boxComedia)
                                .addComponent(boxDrama))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(btnRecomendar)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFieldDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(textFieldActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textFieldAñoLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(jLabel6)
                .addGap(9, 9, 9)
                .addComponent(boxAccion)
                .addGap(16, 16, 16)
                .addComponent(boxDrama)
                .addGap(18, 18, 18)
                .addComponent(boxComedia)
                .addGap(68, 68, 68)
                .addComponent(btnRecomendar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecomendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecomendarActionPerformed
        // TODO add your handling code here:
        
        String director = txtFieldDirector.getText();
        String actor = textFieldActor.getText();
        String genero = "";
        String pais = textFieldPais.getText();
        String añoString = textFieldAñoLanzamiento.getText();
        Integer año = 0;
        if (!añoString.isEmpty()) {
             año = Integer.parseInt(textFieldAñoLanzamiento.getText());
        }
        
        if (boxAccion.isSelected()) {
            genero = "Action";
        }
        if (boxDrama.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Drama";
            } else {
                genero = "Drama";
            }   
        }
        if (boxComedia.isSelected()) {
            if (!genero.isEmpty()) {
                genero += ",Comedy";
            } else {
                genero = "Comedy";
            }   
        }
        
        DataSetMovies data = new DataSetMovies();
        data.LeerArchivo(ruta);
   
        Similitud(data.director_name,data.actor_1_name,data.genres_by_movie,data.country,data.title_year,director,actor,genero,pais,año);
        
        ArrayList<Integer>listaRandom = new ArrayList<>();
        for (int i = 0; i < 10; i++) {
        Random rand = new Random();
        while(true) 
        {
        int randomElement = recomendacion.get(rand.nextInt(recomendacion.size()));
        if(!listaRandom.contains(randomElement))
        {
        listaRandom.add(randomElement);
        break;
        }
        }
        }
        DefaultListModel model = new DefaultListModel<>();
        for(Integer random : listaRandom) {
            String add = data.movie_title.get(random);
            model.addElement(add);
        }
        jList.setModel(model);
    }//GEN-LAST:event_btnRecomendarActionPerformed

    
    public static double redondearDecimales(double valorInicial, int numeroDecimales) {
        double parteEntera, resultado;
        resultado = valorInicial;
        parteEntera = Math.floor(resultado);
        resultado=(resultado-parteEntera)*Math.pow(10, numeroDecimales);
        resultado=Math.round(resultado);
        resultado=(resultado/Math.pow(10, numeroDecimales))+parteEntera;
        return resultado;
    }
    
    public void Similitud (ArrayList<String> ListaDirector, ArrayList<String> ListaActor, ArrayList<ArrayList<String>>ListaGenero, ArrayList<String> ListaPais, ArrayList<Integer> ListaAño,
            String Director, String Actor, String Genero, String Pais, Integer Año) {
        
        double pesoDirector = 0.20;
        double pesoActorPrincipal = 0.15;
        double pesoGenero = 0.25;
        double pesoPais = 0.05;
        double pesoAñoLanzamiento = 0.30;
        
        String[] generosUsuario = Genero.split(",");
        
        for (int i = 0; i < ListaDirector.size(); i++) {
            double similitud = 1;
            
            if (ListaDirector.get(i).toUpperCase().equals(Director.toUpperCase())) {
                similitud = similitud * pesoDirector;
            }
            if (ListaActor.get(i).toUpperCase().equals(Actor.toUpperCase())) {
                similitud = similitud * pesoActorPrincipal;
            }
            ArrayList<String> generosMovie = new ArrayList<>();
            generosMovie = ListaGenero.get(i);
            for (String genero : generosUsuario){
            if(generosMovie.contains(genero)){
                similitud = similitud * pesoGenero;
            }
            }
            if (ListaPais.get(i).toUpperCase().equals(Pais.toUpperCase())) {
                similitud = similitud * pesoPais;
            }
            if (Objects.equals(ListaAño.get(i), Año)) {
                similitud = similitud * pesoAñoLanzamiento;
            }
            similitud = redondearDecimales(similitud,4);
            listaSimilitud.add(similitud);
        }
        Validar();
    }
    
    public void Validar () {
        double rango1=0, rango2=0;
        rango1 = NumeroMinimo(listaSimilitud,0);
        rango2 = NumeroMinimo(listaSimilitud,1);
        
        int contador = 1;
        if (rango2 == rango1) {
            while (true) {
            rango2 = NumeroMinimo(listaSimilitud,contador);
                if (rango2 != rango1) {
                    break;
                } 
                contador++;
            }
        }
        contador = 0;
        for(double n: listaSimilitud)
        {
            if(n == rango1 || n == rango2)                
            {
                recomendacion.add(contador);                        
            }
            contador++;
        }
    }
            
    public Double NumeroMinimo (ArrayList lista, int n){
        List<Double> sortedlist = new ArrayList<>(lista); 
        Collections.sort(sortedlist); 
        return sortedlist.get(n);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecomendacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecomendacionUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxAccion;
    private javax.swing.JCheckBox boxComedia;
    private javax.swing.JCheckBox boxDrama;
    private javax.swing.JButton btnRecomendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textFieldActor;
    private javax.swing.JTextField textFieldAñoLanzamiento;
    private javax.swing.JTextField textFieldPais;
    private javax.swing.JTextField txtFieldDirector;
    // End of variables declaration//GEN-END:variables
}
